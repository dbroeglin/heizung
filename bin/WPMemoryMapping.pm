# Memory mapping of the WPCU.C device
%wp_memory = (
# Overview
    'RTCTime'               			=> { function => 4, addr => 0x0001, size => 0xD, acl => '', type => TYPE_DATETIME, caption => 'Time', unit => ''},
    'RTCDate'               			=> { function => 4, addr => 0x00D1, size => 0xD, acl => '', type => TYPE_DATETIME, caption => 'Date', unit => ''},
    'LngSelect'             			=> { function => 4, addr => 0x01A1, size => 0x1, acl => '', type => TYPE_INT, caption => 'Language', unit => ''},
    'OutdoorTemp'           			=> { function => 3, addr => 0x01B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T outdoor', unit => '°C'},
    'OutdoorTemp1h'         			=> { function => 4, addr => 0x01D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T outdoor 1h', unit => '°C'},
    'OutdoorTemp24h'        			=> { function => 4, addr => 0x01F1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T outdoor 24h', unit => '°C'},
    'HeatSourceIn'          			=> { function => 3, addr => 0x0211, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T source in', unit => '°C'},
    'HeatSourceOut'         			=> { function => 3, addr => 0x0231, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T source out', unit => '°C'},
    'EvaporationTemp'       			=> { function => 3, addr => 0x0251, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T evaporator', unit => '°C'},
    'SunctionGasTemp'       			=> { function => 3, addr => 0x0271, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T sunction line', unit => '°C'},
    'EvaporationPress'      			=> { function => 3, addr => 0x0291, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'p evaporator', unit => 'bar'},
    'ReturnTempNominal'     			=> { function => 4, addr => 0x02B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return target', unit => '°C'},
    'ReturnTemp'            			=> { function => 3, addr => 0x02D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return real', unit => '°C'},
    'FlowTemp'              			=> { function => 3, addr => 0x02F1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T heating out', unit => '°C'},
    'Condensation Temp'     			=> { function => 3, addr => 0x0311, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T condenser', unit => '°C'},
    'CondensationPress'     			=> { function => 3, addr => 0x0331, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'p condenser', unit => 'bar'},
    'RoomTemp'              			=> { function => 3, addr => 0x0351, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T pilot room', unit => '°C'},
    'RoomTemp1h'            			=> { function => 4, addr => 0x0371, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T pilot room 1h', unit => '°C'},
    'DomesticWaterTemp'     			=> { function => 4, addr => 0x0391, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T hot water', unit => '°C'},
    'PoolTemp'              			=> { function => 4, addr => 0x03B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T pool', unit => '°C'},
    'SolarTemp'             			=> { function => 3, addr => 0x03D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T solar', unit => '°C'},
# Heating
    'HeatOff'               			=> { function => 1, addr => 0x03F1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Heating turn off', unit => ''},
    'HeatTimeOn'            			=> { function => 4, addr => 0x0401, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Heating time start', unit => ''},
    'HeatTimeOff'           			=> { function => 4, addr => 0x0411, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Heating time stop', unit => ''},
    'HeatCharacteristicSetPoint'		=> { function => 4, addr => 0x0421, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T out begin', unit => '°C'},
    'HeatCharacteristicSetPointBaseTemp'=> { function => 4, addr => 0x0441, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return base', unit => '°C'},
    'HeatCharacteristicGradient'        => { function => 4, addr => 0x0461, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T curve gradient', unit => '%'},
    'HeatCharacteristicLimit'           => { function => 4, addr => 0x0481, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T curve limit', unit => '°C'},
    'HeatReturnTemp'                    => { function => 4, addr => 0x04A1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return real', unit => '°C'},
    'HeatReturnTempNominal'             => { function => 4, addr => 0x04C1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return target', unit => '°C'},
    'HeatTempHyst'                      => { function => 4, addr => 0x04E1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => 'K'},
    'RoomTempNominal'                   => { function => 4, addr => 0x0501, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T pilot room target', unit => '°C'},
    'RoomTempFactor'                    => { function => 4, addr => 0x0521, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'T pilot room influence', unit => '%'}, # only right 8 bit
    'HeatIncreaseOff'                   => { function => 1, addr => 0x0531, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Increase Off', unit => ''},
    'HeatIncreaseTimeOn'                => { function => 4, addr => 0x0541, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Set pt chg start', unit => ''},
    'HeatIncreaseTimeOff'               => { function => 4, addr => 0x0551, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Set pt chg stop', unit => ''},
    'HeatIncreaseSetPtOffset'           => { function => 4, addr => 0x0561, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Setpoint change', unit => 'K'},
    'AuxilaryModeHeating'               => { function => 4, addr => 0x0581, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Step mode', unit => ''},
    'AuxilaryMaxDifference'             => { function => 4, addr => 0x0591, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Step max. diff.', unit => 'K'},
# Cooling
    'CoolOff'                           => { function => 1, addr => 0x05B1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Cooling turn off', unit => ''},
    'CoolTimeOn'                        => { function => 4, addr => 0x05C1, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Cooling time start', unit => ''},
    'CoolTimeOff'                       => { function => 4, addr => 0x05D1, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Cooling time stop', unit => ''},
    'CoolCharacteristicSetPoint'        => { function => 4, addr => 0x05E1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T out base', unit => '°C'},
    'CoolReturnTemp'                    => { function => 4, addr => 0x0601, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return real', unit => '°C'},
    'CoolReturnTempNominal'             => { function => 4, addr => 0x0621, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return target', unit => '°C'},
    'CoolReturnTempHyst'                => { function => 4, addr => 0x0641, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => 'K'},
# Hot Water
    'DomesticWaterOff'                  => { function => 1, addr => 0x0661, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Hot Water turn off', unit => ''},
    'DomesticWaterTimeOn'               => { function => 4, addr => 0x0671, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time start', unit => ''},
    'DomesticWaterTimeOff'              => { function => 4, addr => 0x0681, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time stop', unit => ''},
    'DomesticWaterTempActual'           => { function => 4, addr => 0x0691, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T water real', unit => '°C'},
    'DomesticWaterTempNominal'          => { function => 4, addr => 0x06B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T water target', unit => '°C'},
    'DomesticWaterTempHyst'             => { function => 4, addr => 0x06D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => 'K'},
    'LegionellaSchedule'                => { function => 3, addr => 0x06F1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Legio. MTWTFSSP', unit => ''},
    'LegionellaTimeOn'                  => { function => 4, addr => 0x0701, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Legio. Begin', unit => ''},
    'LegionellaTimeOff'                 => { function => 4, addr => 0x0711, size => 0x1, acl => '', type => TYPE_TIME, caption => 'LEGIO. End', unit => ''},
    'LegionellaTempNominal'             => { function => 4, addr => 0x0721, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Legio. Nominal', unit => '°C'},
    'DWNumberOfCompressors'             => { function => 4, addr => 0x0741, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Num. of compressors', unit => ''},
    'DomesticWaterTimeDelayOnSolar'     => { function => 4, addr => 0x0751, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Time delay on solar', unit => 'h'},
# Pool
    'PoolOff'                           => { function => 1, addr => 0x0761, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Pool turn off', unit => ''},
    'PoolTimeOn'                        => { function => 4, addr => 0x0771, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time start', unit => ''},
    'PoolTimeOff'                       => { function => 4, addr => 0x0781, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time stop', unit => ''},
    'PoolTempActual'                    => { function => 4, addr => 0x0791, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return real', unit => '°C'},
    'PoolTempNominal'                   => { function => 4, addr => 0x07B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return target', unit => '°C'},
    'PoolTempHyst'                      => { function => 4, addr => 0x07D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => 'K'},
    'PoolMaxRunTime'                    => { function => 4, addr => 0x07F1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Max run period', unit => 'min'},
    'PoolNumberOfCompressors'           => { function => 4, addr => 0x0801, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Auxilary compressors', unit => ''},
    'PoolTimeDelayOnSolar'              => { function => 4, addr => 0x0811, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Time delay on solar', unit => 'h'},
# Solar
    'SolarOff'                          => { function => 1, addr => 0x0821, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Solar turn off', unit => ''},
    'SolarTimeOn'                       => { function => 4, addr => 0x0831, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time start', unit => ''},
    'SolarTimeOff'                      => { function => 4, addr => 0x0841, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time stop', unit => ''},
    'SolarTempActual'                   => { function => 3, addr => 0x0851, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T solar', unit => '°C'},
    'SolarTempReturn'                   => { function => 4, addr => 0x0871, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return solar', unit => '°C'},
    'SolarTempNominalMin'               => { function => 4, addr => 0x0891, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return min', unit => '°C'},
    'SolarTempHyst'                     => { function => 4, addr => 0x08B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => 'K'},
# MixerValve
    'HeatingCircuitTemp'                => { function => 4, addr => 0x08D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T circuit', unit => '°C'},
    'OperatingStartTime'                => { function => 4, addr => 0x08F1, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time start', unit => ''},
    'OperatingStopTime'                 => { function => 4, addr => 0x0901, size => 0x1, acl => '', type => TYPE_TIME, caption => 'Time stop', unit => ''},
    'CharacteristicSetPointBaseTemp'    => { function => 3, addr => 0x0911, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T out base', unit => '°C'},
    'CharacteristicGradient'            => { function => 4, addr => 0x0931, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T curve gradient', unit => '%'},
    'CharacteristicLimit'               => { function => 4, addr => 0x0951, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T curve limit', unit => '°C'},
    'HeatingCircuitNominal'             => { function => 4, addr => 0x0971, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T nominal', unit => '°C'},
    'Kp'                                => { function => 4, addr => 0x0991, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Kp', unit => '%'},
    'Tn'                                => { function => 4, addr => 0x09B1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Tn', unit => 's'},
    'Ta'                                => { function => 4, addr => 0x09C1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Ta', unit => 's'},
    'Hysteresis'                        => { function => 4, addr => 0x09D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hysteresis', unit => '%'},
    'AutomaticOffDownUpSwitch'          => { function => 4, addr => 0x09F1, size => 0x2, acl => '', type => TYPE_BYTE, caption => 'Mixer mode (AUTO:OFF:DOWN:UP)', unit => ''},
    'DOExtStatus'                       => { function => 4, addr => 0x0A01, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'DO state', unit => ''},
# AuxiliaryHeat
    'AuxiliaryHeatMode'                 => { function => 4, addr => 0x0A11, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Step 2 mode (OFF:LEGIONELLA:ON)', unit => ''},
    'AuxiliaryHeatTempLimitSourceIn'    => { function => 4, addr => 0x0A21, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'LimitHeatSrcIn', unit => '°C'},
# OperatingHours
    'OHCompressor1'                     => { function => 4, addr => 0x0A41, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Compressor 1', unit => 'h'},
    'OHCompressor2'                     => { function => 4, addr => 0x0A61, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Compressor 2', unit => 'h'},
    'OHHeatingCompressor'               => { function => 4, addr => 0x0A81, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Heating comp.', unit => 'h'},
    'OHHeatingAuxilary'                 => { function => 4, addr => 0x0AA1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Heating aux.', unit => 'h'},
    'OHCooling'                         => { function => 4, addr => 0x0AC1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Cooling', unit => 'h'},
    'OHDomesticWaterCompressor'         => { function => 4, addr => 0x0AE1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hotwater comp.', unit => 'h'},
    'OHDomesticWaterAuxilary'           => { function => 4, addr => 0x0B01, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Hotwater aux.', unit => 'h'},
    'OHPoolCompressor'                  => { function => 4, addr => 0x0B21, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Pool', unit => 'h'},
    'OHSolar'                           => { function => 4, addr => 0x0B41, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Solar thermal collector', unit => 'h'},
    'OperatingHoursSelector'            => { function => 4, addr => 0x0B61, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Operating hours (None:Compressor1:Compressor2:HeatingCompr:DWaterCompr:HeatingAux:DWaterAux:PoolCompr:Cooling:Solar thermal collector)', unit => ''},
    'OperatingHoursValue'               => { function => 4, addr => 0x0B71, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'New value', unit => 'h'},
# Failure
    'FailureTimeStampTIME'              => { function => 4, addr => 0x0B91, size => 0xD, acl => '', type => TYPE_DATETIME, caption => 'Time', unit => ''},
    'FailureTimeStampDATE'              => { function => 4, addr => 0x0C61, size => 0xD, acl => '', type => TYPE_DATETIME, caption => 'Date', unit => ''},
    'FailureOperatingMode'              => { function => 1, addr => 0x0D31, size => 0x8, acl => '', type => TYPE_BITS, caption => 'Running mode', unit => ''},
    'FailureDOBuffer'                   => { function => 1, addr => 0x0D41, size => 0x8, acl => '', type => TYPE_BITS, caption => 'DO buffer', unit => ''},
    'FailureDIBuffer'                   => { function => 1, addr => 0x0D51, size => 0x8, acl => '', type => TYPE_BITS, caption => 'DI buffer', unit => ''},
    'FailureAIError'                    => { function => 1, addr => 0x0D61, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Sensor error', unit => ''},
    'FailureEvaporationTemp'            => { function => 4, addr => 0x0D71, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'P evaporator', unit => 'bar'},
    'FailureCondensationTemp'           => { function => 4, addr => 0x0D91, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'p condenser', unit => 'bar'},
    'FailureTempReturn'                 => { function => 4, addr => 0x0DB1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T return real', unit => '°C'},
    'FailureTempFlow'                   => { function => 4, addr => 0x0DD1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T heating out', unit => '°C'},
    'FailureTempHeatSourceIn'           => { function => 4, addr => 0x0DF1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T source in', unit => '°C'},
    'FailureTempHeatSourceOut'          => { function => 4, addr => 0x0E11, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T source out', unit => '°C'},
    'FailureTempSuctionGas'             => { function => 4, addr => 0x0E31, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T suction line', unit => '°'},
    'FailureTempOutdoor'                => { function => 4, addr => 0x0E51, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T outdoor', unit => '°C'},
    'FailureTempDomesticWater'          => { function => 4, addr => 0x0E71, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T hot water', unit => '°C'},
    'FailureTempPool'                   => { function => 4, addr => 0x0E91, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T pool', unit => '°C'},
    'FailureTempSolar'                  => { function => 4, addr => 0x0EB1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'T solar', unit => '°C'},
# Service
    'View'                              => { function => 4, addr => 0x0ED1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'View (Normal:Expert)', unit => ''},
    'Pincode'                           => { function => 4, addr => 0x0EE1, size => 0x2, acl => '', type => TYPE_INT, caption => 'PIN-code', unit => ''},
    'SetDefaultSettings'                => { function => 4, addr => 0x0F01, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Factory reset', unit => ''},
    'SoftwareReset'                     => { function => 4, addr => 0x0F11, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Software Reset', unit => ''},
    'DOManualOperatingModeOn'           => { function => 1, addr => 0x0F21, size => 0x10, acl => '', type => TYPE_BITS, caption => 'DO-manual on', unit => ''},
    'HeatingUpScreed'                   => { function => 4, addr => 0x0F31, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'First heating 7d', unit => ''},
    'ScreedTempNominal'                 => { function => 4, addr => 0x0F41, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'First heating temp', unit => '°C'},
    'SourcePumpPreRunPeriod'            => { function => 4, addr => 0x0F61, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'SourcePumpPreRunPeriod', unit => 's'},
    'HeatingPumpPreRunPeriod'           => { function => 4, addr => 0x0F71, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'HeatingPumpPreRunPeriod', unit => 's'},
    'HeatingPumpAfterRunPeriod'         => { function => 4, addr => 0x0F81, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'After run period', unit => 'min'},
    'CyclicMeasurementPeriod'           => { function => 4, addr => 0x0F91, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Cyclic Measurement', unit => 'min'},
    'OffsetPn'                          => { function => 4, addr => 0x0FA1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Offset press low', unit => ''},
    'OffsetPh'                          => { function => 4, addr => 0x0FC1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Offset press high', unit => ''},
    'NDStatus'                          => { function => 4, addr => 0x0FE1, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'ND Status', unit => ''},
# ErrorEvents
    'Failure'                           => { function => 1, addr => 0x0FF1, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Failure', unit => ''},
    'Interruption'                      => { function => 1, addr => 0x1001, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Interruption', unit => ''},
    'WarningsInput'                     => { function => 1, addr => 0x1011, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Warning source', unit => ''},
    'WarningsOutput'                    => { function => 1, addr => 0x1021, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Warning outlet', unit => ''},
    'WarningsDiv'                       => { function => 1, addr => 0x1031, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Warning sensors', unit => ''},
    'WarningsOthers'                    => { function => 1, addr => 0x1041, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Warning diff.', unit => ''},
    'WarningInMask'                     => { function => 1, addr => 0x1051, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Suppr.warn.sourc', unit => ''},
    'WarningOutMask'                    => { function => 1, addr => 0x1061, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Suppr.warn.outl.', unit => ''},
    'WarningDivMask'                    => { function => 1, addr => 0x1071, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Suppr.warn.sens.', unit => ''},
    'WarningOthersMask'                 => { function => 1, addr => 0x1081, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Suppr. warn diff.', unit => ''},
# Default
    'ServiceHeating'                    => { function => 1, addr => 0x1091, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Heating service', unit => ''},
    'ServiceCooling'                    => { function => 1, addr => 0x10A1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Cooling service', unit => ''},
    'ServiceDomesticWater'              => { function => 1, addr => 0x10B1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Hot water service', unit => ''},
    'ServicePool'                       => { function => 1, addr => 0x10C1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Pool service', unit => ''},
    'ServiceSolar'                      => { function => 1, addr => 0x10D1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Solar service', unit => ''},
    'ServiceAuxiliaryHeating'           => { function => 1, addr => 0x10E1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Step 2 service', unit => ''},
    'ServiceMixer'                      => { function => 1, addr => 0x10F1, size => 0x1, acl => '', type => TYPE_BOOL, caption => 'Mixer mode service', unit => ''},
    'HeatSourceMinT'                    => { function => 4, addr => 0x1101, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Heat source Tmin (+2 °C: -1 °C:-9 °C)', unit => ''},
    'SolarSensor'                       => { function => 4, addr => 0x1111, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Solar sensor (Pt500:Pt1000)', unit => ''},
    'Refrigerant'                       => { function => 4, addr => 0x1121, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Refrigerant (R407c:R134a)', unit => ''},
    'NumberOfCompressors'               => { function => 4, addr => 0x1131, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Num. Compr. (1:1_75_100:1_66_100:1_50_100:2)', unit => ''},
    'ModemType'                         => { function => 4, addr => 0x1141, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Modem Type (NONE:WPCU.M56k)', unit => ''},
    'CommMode'                          => { function => 4, addr => 0x1151, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Comm. mode (NO-COMM:LINE-MODBUS:DIAL-MODBUS)', unit => ''},
    'Ringtones'                         => { function => 4, addr => 0x1161, size => 0x1, acl => '', type => TYPE_BYTE, caption => 'Ringtones', unit => ''},
    'ExtControlCode'                    => { function => 4, addr => 0x1171, size => 0x2, acl => '', type => TYPE_INT, caption => 'External control', unit => ''},
# PowerColculation
    'Pelectric'                         => { function => 4, addr => 0x1191, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'P electric', unit => 'kW'},
    'Pthermal'                          => { function => 4, addr => 0x11B1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'P thermal', unit => 'kW'},
    'COP'                               => { function => 4, addr => 0x11D1, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'COP', unit => ''},
    'SelectedYear'                      => { function => 4, addr => 0x11F1, size => 0x1, acl => '', type => TYPE_INT, caption => 'Selected year', unit => ''},
    'SelectedValue'                     => { function => 4, addr => 0x1201, size => 0x1, acl => '', type => TYPE_INT, caption => 'Selected type (Welectric:Wthermal:Wheating:Wdom.water:Wpool:beta_total:beta_heating:beta_d.water:beta_pool)', unit => ''},
    'PowerValue'                        => { function => 4, addr => 0x1211, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Selected value', unit => ''},
    'PSourcePump'                       => { function => 4, addr => 0x1231, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Psourcepump', unit => 'kW'},
# Info
    'FirmwareVersion'                   => { function => 4, addr => 0x1251, size => 0x8, acl => '', type => TYPE_STRING, caption => 'Firmware version', unit => ''},
    'FirmwareDate'                      => { function => 4, addr => 0x12D1, size => 0x8, acl => '', type => TYPE_STRING, caption => 'Firmware date', unit => ''},
    'ManufType'                         => { function => 4, addr => 0x1351, size => 0x8, acl => '', type => TYPE_STRING, caption => 'Model', unit => ''},
    'ManufSerialNum'                    => { function => 4, addr => 0x13D1, size => 0x8, acl => '', type => TYPE_STRING, caption => 'Serial number', unit => ''},
    'SetManufType'                      => { function => 4, addr => 0x1451, size => 0x8, acl => '--', type => TYPE_STRING, caption => 'Set model', unit => ''},
    'SetManufSerialNum'                 => { function => 4, addr => 0x14D1, size => 0x8, acl => '--', type => TYPE_STRING, caption => 'Set serial nr', unit => ''},
# System
    'OperatingState'                    => { function => 1, addr => 0x1551, size => 0x8, acl => '', type => TYPE_BITS, caption => 'Operating state', unit => ''},
    'DOBuffer'                          => { function => 1, addr => 0x1561, size => 0x10, acl => '', type => TYPE_BITS, caption => 'Digital output', unit => ''},
    'DIBuffer'                          => { function => 1, addr => 0x1571, size => 0x8, acl => '', type => TYPE_BITS, caption => 'Digital input', unit => ''},
    'ADC_Error'                         => { function => 1, addr => 0x1581, size => 0x10, acl => '', type => TYPE_BITS, caption => 'ADC error', unit => ''},
    'LCD_Display_Line_1'                => { function => 4, addr => 0x1591, size => 0x8, acl => '', type => TYPE_STRING, caption => 'LCD line 1', unit => ''},
    'LCD_Display_Line_2'                => { function => 4, addr => 0x1611, size => 0x8, acl => '', type => TYPE_STRING, caption => 'LCD line 2', unit => ''},
    'TimeScaler'                        => { function => 4, addr => 0x1691, size => 0x2, acl => '', type => TYPE_FLOAT, caption => 'Time factor', unit => ''}
);

%dataTypes = (
    TYPE_FLOAT    => 1,
    TYPE_DATETIME => 2,
    TYPE_INT      => 3,
    TYPE_BOOL     => 4,
    TYPE_TIME     => 5,
    TYPE_BYTE     => 6,
    TYPE_BITS     => 7,
    TYPE_STRING   => 8,
);

    
return 1;
